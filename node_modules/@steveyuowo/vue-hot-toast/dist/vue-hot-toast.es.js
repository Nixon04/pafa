import { defineComponent as x, ref as d, watchEffect as h, openBlock as i, createElementBlock as c, normalizeStyle as m, withModifiers as y, createElementVNode as u, createCommentVNode as v, toDisplayString as T, reactive as C, computed as O, createBlock as f, Teleport as V, createVNode as k, Transition as H, withCtx as w, normalizeClass as b, Fragment as E, renderList as j, unref as g } from "vue";
const I = ["onClick"], S = { class: "VueHotToast__icon" }, B = { key: 0 }, D = ["src"], M = {
  key: 1,
  class: "VueHotToast__checkmark"
}, N = {
  key: 2,
  class: "VueHotToast__error"
}, U = {
  key: 3,
  class: "VueHotToast__loading"
}, $ = { class: "content" }, z = { class: "content-message" }, L = /* @__PURE__ */ x({
  __name: "ToasterItem",
  props: {
    id: {},
    type: {},
    message: {},
    autoClose: { type: Boolean },
    duration: {},
    icon: {},
    position: {}
  },
  emits: ["close"],
  setup(t, { emit: o }) {
    const e = t, s = d(null), n = d(0), p = d(0), _ = () => {
      o("close");
    };
    return h(() => {
      e.autoClose && (n.value = Date.now(), p.value = e.duration, s.value = setTimeout(_, p.value));
    }), (r, q) => (i(), c("div", {
      class: "VueHotToast__toast",
      style: m(`--toast-duration: ${r.duration}s;`),
      onClick: y(_, ["prevent"])
    }, [
      u("div", S, [
        r.icon ? (i(), c("div", B, [
          u("img", {
            class: "VueHotToast__custom-icon",
            src: r.icon,
            width: 24,
            height: 24,
            alt: "Toast Icon"
          }, null, 8, D)
        ])) : r.type === "success" ? (i(), c("div", M)) : r.type === "error" ? (i(), c("div", N)) : r.type === "loading" ? (i(), c("div", U)) : v("", !0)
      ]),
      u("div", $, [
        u("div", z, T(r.message), 1)
      ])
    ], 12, I));
  }
}), A = {
  type: "info",
  message: "Here's your toast.",
  autoClose: !0,
  duration: 3e3,
  position: "top-center"
};
function F() {
  let t = (/* @__PURE__ */ new Date()).getTime();
  var o = "xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(
    /[xy]/g,
    function(e) {
      var s = (t + Math.random() * 16) % 16 | 0;
      return t = Math.floor(t / 16), (e == "x" ? s : s & 3 | 8).toString(16);
    }
  );
  return o;
}
const a = C({
  notifications: []
}), l = function() {
  const t = (o) => {
    const e = Object.assign({ ...A }, o), s = F();
    return a.notifications.push(
      {
        id: s,
        ...e
      }
    ), s;
  };
  return t.update = (o, e) => {
    const s = a.notifications.findIndex(
      (n) => n.id === o
    );
    if (s === -1)
      throw t(e), new Error("Can't find toast");
    return Object.assign(a.notifications[s], e), o;
  }, t._handleOptions = (o, e) => {
    const s = Object.assign(e ?? {}, { type: o });
    return t(s);
  }, t.loading = (o, e) => t._handleOptions(
    "loading",
    Object.assign(e ?? {}, { message: o })
  ), t.success = (o, e) => t._handleOptions(
    "success",
    Object.assign(e ?? {}, { message: o })
  ), t.error = (o, e) => t._handleOptions(
    "error",
    Object.assign(e ?? {}, { message: o })
  ), t.promise = (o, e) => {
    const s = t.loading(e.loading, {
      position: e.position
    });
    return o.then((n) => (t.update(s, {
      message: e.success,
      type: "success",
      position: e.position
    }), s)).catch((n) => {
      throw t.update(s, {
        message: e.error,
        type: "error",
        position: e.position
      }), n;
    });
  }, t;
}(), J = (t) => {
  const o = a.notifications.findIndex((e) => e.id === t);
  o !== -1 && a.notifications.splice(o, 1);
}, K = /* @__PURE__ */ x({
  __name: "Toaster",
  setup(t) {
    const o = O(() => a.notifications.length > 0 ? a.notifications[0].position : "top-center");
    return (e, s) => (i(), f(V, { to: "body" }, [
      k(H, {
        name: "VueHotToast__teleport-transition",
        tag: "div",
        class: "VueHotToast__teleport-transition"
      }, {
        default: w(() => [
          u("div", {
            class: b(["VueHotToast__toast-container", `VueHotToast__${o.value}`])
          }, [
            (i(!0), c(E, null, j(g(a).notifications, (n) => (i(), f(L, {
              key: n.id,
              id: n.id,
              type: n.type,
              message: n.message,
              "auto-close": n.autoClose,
              duration: n.duration,
              icon: n.icon,
              position: n.position,
              onClose: () => {
                g(J)(n.id);
              }
            }, null, 8, ["id", "type", "message", "auto-close", "duration", "icon", "position", "onClose"]))), 128))
          ], 2)
        ]),
        _: 1
      })
    ]));
  }
});
function P(t, o) {
  return l.loading(t, {
    autoClose: !1,
    position: o
  });
}
function Q(t, o, e) {
  l.update(o, {
    message: t,
    type: "success",
    autoClose: !0,
    duration: 3e3,
    position: e
  });
}
function W(t, o, e) {
  l.update(o, {
    message: R(t),
    type: "error",
    autoClose: !0,
    duration: 3e3,
    position: e
  });
}
function R(t) {
  if (!t)
    return "Undefined Error";
  if (typeof t == "string")
    return t;
  if (t instanceof Error) {
    const o = t;
    return o.reason ?? o.message;
  } else
    return JSON.stringify(t);
}
export {
  K as Toaster,
  l as toast,
  W as toastError,
  P as toastLoading,
  Q as toastSuccess
};
